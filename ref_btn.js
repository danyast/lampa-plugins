/**
 * Lampa TV Native Refresh Plugin 19
 * –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Lampa API –±–µ–∑ DOM –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è TV –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
 */

(function() {
    'use strict';
    
    console.log('üîÑ Lampa Native Refresh Plugin Starting...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Lampa
    if (typeof Lampa === 'undefined') {
        console.error('‚ùå Lampa –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞');
        return;
    }
    
    console.log('‚úÖ Lampa –¥–æ—Å—Ç—É–ø–Ω–∞:', Lampa);
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Lampa API
    function refreshViaLampa() {
        console.log('üîÑ Attempting refresh via Lampa API...');
        
        try {
            // –ú–µ—Ç–æ–¥ 1: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π view
            if (Lampa.Listener && Lampa.Listener.emit) {
                console.log('üîÑ Emitting view refresh event...');
                Lampa.Listener.emit('view', { type: 'refresh' });
                return true;
            }
        } catch (e) {
            console.log('‚ùå View refresh failed:', e);
        }
        
        try {
            // –ú–µ—Ç–æ–¥ 2: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ navigation
            if (Lampa.Listener && Lampa.Listener.emit) {
                console.log('üîÑ Emitting navigation refresh event...');
                Lampa.Listener.emit('navigate', { type: 'refresh' });
                return true;
            }
        } catch (e) {
            console.log('‚ùå Navigation refresh failed:', e);
        }
        
        try {
            // –ú–µ—Ç–æ–¥ 3: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ full event
            if (Lampa.Listener && Lampa.Listener.emit) {
                console.log('üîÑ Emitting full refresh event...');
                Lampa.Listener.emit('full', { type: 'refresh' });
                return true;
            }
        } catch (e) {
            console.log('‚ùå Full refresh failed:', e);
        }
        
        try {
            // –ú–µ—Ç–æ–¥ 4: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ activity
            if (Lampa.Activity && Lampa.Activity.current) {
                console.log('üîÑ Refreshing current activity...');
                const currentActivity = Lampa.Activity.current();
                if (currentActivity && currentActivity.render) {
                    currentActivity.render();
                    return true;
                }
            }
        } catch (e) {
            console.log('‚ùå Activity refresh failed:', e);
        }
        
        try {
            // –ú–µ—Ç–æ–¥ 5: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ router
            if (Lampa.Router && Lampa.Router.refresh) {
                console.log('üîÑ Using Lampa Router refresh...');
                Lampa.Router.refresh();
                return true;
            }
        } catch (e) {
            console.log('‚ùå Router refresh failed:', e);
        }
        
        try {
            // –ú–µ—Ç–æ–¥ 6: –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ storage
            if (Lampa.Storage && Lampa.Storage.clear) {
                console.log('üîÑ Clearing Lampa storage...');
                Lampa.Storage.clear();
                return true;
            }
        } catch (e) {
            console.log('‚ùå Storage clear failed:', e);
        }
        
        console.log('‚ùå All Lampa API methods failed');
        return false;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    function forceRefresh() {
        console.log('üîÑ Force refresh triggered...');
        
        try {
            // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å Lampa API
            if (refreshViaLampa()) {
                console.log('‚úÖ Refresh via Lampa API successful');
                return;
            }
        } catch (e) {
            console.log('‚ùå Lampa API refresh failed:', e);
        }
        
        try {
            // Fallback: –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            console.log('üîÑ Trying page reload fallback...');
            
            // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            if (window.location && window.location.reload) {
                window.location.reload();
            } else if (window.location && window.location.href) {
                window.location.href = window.location.href;
            } else if (window.history && window.history.go) {
                window.history.go(0);
            } else {
                console.log('‚ùå No refresh methods available');
            }
        } catch (e) {
            console.error('‚ùå All refresh methods failed:', e);
        }
    }
    
    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è Lampa –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (Lampa.Listener && Lampa.Listener.follow) {
        console.log('‚úÖ Setting up Lampa event listeners...');
        
        // –°–ª—É—à–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        Lampa.Listener.follow('full', function(e) {
            if (e.type === 'complite') {
                console.log('üîÑ Full load completed, refresh plugin ready');
            }
        });
        
        // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è view
        Lampa.Listener.follow('view', function(e) {
            if (e.type === 'complite') {
                console.log('üîÑ View loaded, refresh plugin active');
            }
        });
        
        // –°–ª—É—à–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        Lampa.Listener.follow('navigate', function(e) {
            console.log('üîÑ Navigation event:', e);
        });
        
    } else {
        console.log('‚ùå Lampa.Listener not available');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (typeof window !== 'undefined') {
        window.lampaRefresh = function() {
            console.log('üîÑ Global refresh function called');
            forceRefresh();
        };
        
        console.log('‚úÖ Global refresh function added: window.lampaRefresh()');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ Lampa –æ–±—ä–µ–∫—Ç –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
    if (Lampa && typeof Lampa === 'object') {
        Lampa.refresh = function() {
            console.log('üîÑ Lampa.refresh() called');
            forceRefresh();
        };
        
        console.log('‚úÖ Lampa.refresh() function added');
    }
    
    console.log('üîÑ Lampa Native Refresh Plugin Ready!');
    console.log('üîÑ Use: window.lampaRefresh() or Lampa.refresh()');
    
})();
